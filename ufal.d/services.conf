// vim: set filetype=icinga2:
/* checks on multiple host */
apply Service "certificate-health" {
    check_command = "check_ssl_cert"
    vars.http_certificate = 30
    vars.http_ssl = true
    assign where (host.vars.http_vhost && !host.vars.no_ssl)
    check_interval = 60m
}

/* check on ufal-point-dev only */
object Service "Metashare_browse"{
    host_name = "ufal-point-dev"
    check_command = "http"
    vars.http_vhost = "$host.vars.http_vhost$"
    vars.http_uri = "/metashare.fcgi/repository/search/"
    vars.http_port = 9191
    vars.http_expect = "HTTP/1.1 200"
    check_interval = 1m
}

/* check on lindat only */
object Service "lindat_service_listing"{
    host_name = "lindat"
    display_name = "Service listing :http://lindat.mff.cuni.cz/en/services"
    check_command = "http"
    vars.http_ssl = true
    vars.http_vhost = "$host.vars.http_vhost$"
    vars.http_uri = "/en/services/"
    check_interval = 60m
}

/* firing check_http, the times, uris etc. defined in hosts.conf */
apply Service for (display => config in host.vars.using_http_check) {
    display_name = display
    check_command = "check_http"
    vars.http_ssl = true
    vars.http_vhost = "$host.vars.http_vhost$"
    if (config.interval) {
        check_interval = config.interval
    } else {
        check_interval = 1m
    }
    //possibly overrides above defined vars.*
    vars += config
}

apply Service for (display => config in host.vars.services) {
    display_name = display
    groups += ["Our services"]
    check_command = "check_http"
    vars.http_ssl = true
    vars.http_vhost = "$host.vars.http_vhost$"
    vars.http_expect = "HTTP/1.1 200"
    vars.http_warn_time = 5
    vars.http_critical_time = 10
    check_interval = 1m
    //possibly overrides above defined vars.*
    vars += config
}

// check resources (css/js files)
object Service "repository_links_status"{
    host_name = "lindat"
    check_command = "check_links_status"
    vars.hostname = "https://" + "$host.vars.http_vhost$"
    vars.uri = "repository/xmlui/"
    vars.pattern = "((UFAL/lib/.*\\.(js|css))|aai/.*\\.js)"
    check_interval = 5m
}

object Service "joomla_links_status"{
    host_name = "lindat"
    check_command = "check_links_status"
    vars.hostname = "https://" + "$host.vars.http_vhost$"
    vars.uri = "en"
    vars.pattern = "(lindat-common.*\\.(js|css))"
    check_interval = 5m
}

// check auth
object Service "Repository SOLR requires authentication"{
    host_name = "lindat"
    check_command = "check_is_auth"
    vars.ssl = true
    vars.hostname = "$host.vars.http_vhost$"
    vars.uri = "/repository/solr/statistics/select?q=*:*"
    vars.timeout = 1000
    vars.valid_status = 401
    check_interval = 1m
}

// handles
object Service "Handle test - EPIC simple"{
    host_name = "handle-server"
    vars.hostname = "hdl.handle.net"
    vars.uri = "/11858/00-097C-0000-0022-AAF5-B?noredirect"
    vars.timeout = 5000
    check_command = "check_http_enhanced"
    check_interval = 2m
}

object Service "Handle server resolution"{
    host_name = "handle-server"
    vars.hostname = "hdl.handle.net"
    vars.uri = "/11234/5-cesilko?noredirect"
    vars.timeout = 1000
    check_command = "check_http_enhanced"
    check_interval = 2m
}

object Service "Handle resolution"{
    host_name = "handle-server"
    vars.input_file = LindatFiles + "/handles.epic.txt"
    vars.timeout = 100000
    vars.log_file = "/tmp/log.handle.epic"
    vars.warn_val = 140
    vars.err_val = 200
    check_command = "check_handle"
    check_interval = 3m
}

object Service "Handle resolution UFAL"{
    host_name = "handle-server"
    vars.input_file = LindatFiles + "/handles.ufal.txt"
    vars.timeout = 10000
    vars.log_file = "/tmp/log.handle.ufal"
    vars.warn_val = 140
    vars.err_val = 200
    check_command = "check_handle"
    check_interval = 3m
}

object Service "Cesilko QA"{
    host_name = "quest"
    check_command = "check_cesilko"
    check_interval = 10m
}

object Service "Home page"{
    host_name = "lindat.cz"
    check_command = "check_http"
    vars.http_vhost = "lindat.cz"
    vars.http_uri = "/"
    vars.http_warn_time = 5
    vars.http_critical_time = 10
    check_interval = 1m
}

//clarin.si handles
object Service "clarin.si Handle server resolution"{
    host_name = "handle-server"
    vars.hostname = "hdl.handle.net"
    vars.uri = "/11356/1061?noredirect"
    vars.timeout = 1000
    check_command = "check_http_enhanced"
    check_interval = 15m
    vars.no_notify = true
}

object Service "clarin.si Handle resolution"{
    host_name = "handle-server"
    vars.input_file = LindatFiles + "/handles.clarin_si.txt"
    vars.timeout = 100000
    vars.log_file = "/tmp/log.handle.clarin_si"
    vars.warn_val = 140
    vars.err_val = 200
    check_command = "check_handle"
    check_interval = 15m
    vars.no_notify = true
}
