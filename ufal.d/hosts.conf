object Host "ufal-point-dev"{
   /* address = "195.113.20.155" */
    address = "10.10.24.211"
    display_name = "LINDAT/CLARIN dev server - ufal-point-dev"
    check_command = "hostalive"
    vars.http_vhost = "ufal-point-dev.ufal.hide.ms.mff.cuni.cz"
/*    vars.http_vhost = "ufal-point-dev.ms.mff.cuni.cz"*/
}

object Host "ufal-point"{
    address = "195.113.20.140"
    display_name = "LINDAT/CLARIN main server - ufal-point"
    check_command = "hostalive"
    vars.http_vhost = "ufal-point.mff.cuni.cz"
}

object Host "lindat"{
    address = "195.113.20.140"
    display_name = "LINDAT/CLARIN main server - lindat"
    check_command = "hostalive"
    vars.http_vhost = "lindat.mff.cuni.cz"

    /* define https uris that should be checked in time */
    vars.using_http_check["Repository home page in time"] = {
        http_uri = "/repository/xmlui/"
        http_warn_time = 5
        http_critical_time = 10
        interval = 1m
    }
    vars.using_http_check["Repository OAI CMDI - old url"] = {
        http_uri = "/oai/request?verb=ListRecords&metadataPrefix=cmdi"
        http_warn_time = 4
        http_critical_time = 5
    }
    vars.using_http_check["Repository OAI DC - old url"] = {
        http_uri = "/oai/request?verb=ListRecords&metadataPrefix=oai_dc"
        http_warn_time = 3
        http_critical_time = 4
    }
    vars.using_http_check["Repository OAI CMDI"] = {
        http_uri = "/repository/oai/request?verb=ListRecords&metadataPrefix=cmdi"
        http_warn_time = 7
        http_critical_time = 9
    }
    vars.using_http_check["Repository OAI DC"] = {
        http_uri = "/repository/oai/request?verb=ListRecords&metadataPrefix=oai_dc"
        http_warn_time = 3
        http_critical_time = 4
    }
    vars.using_http_check["Repository shibboleth-login"] = {
        http_uri = "/xmlui/shibboleth-login"
        http_warn_time = 2
        http_critical_time = 4
    }
    vars.using_http_check["Shibboleth https metadata"] = {
        http_uri = "/Shibboleth.sso/Metadata"
        http_warn_time = 2
        http_critical_time = 4
	http_method = "HEAD"
        interval = 1m
    }
    vars.using_http_check["corpora.fi.muni.cz - Service corpora - NOT FINISHED"] = {
        http_uri = "/services/corpora"
        http_warn_time = 5
        http_critical_time = 10
    }

    /* define uris and string to check */
    vars.using_http_check["Repository home page check string"] = {
        http_uri = "/repository/xmlui/"
        http_warn_time = 5
        http_critical_time = 10
        http_expect_body_regex = "UFALHome"
    }
    vars.using_http_check["Repository - regression test: Accents"] = {
        http_uri = "/repository/oai/cite?metadataPrefix=html&handle=11858/00-097C-0000-0023-4338-F"
        http_warn_time = 5
        http_critical_time = 10
        http_expect_body_regex = "Štěpánek"
    }
    vars.using_http_check["Repository OAI CMDI format eq cmdi "] = {
        http_uri = "/repository/oai/request?verb=ListRecords&metadataPrefix=cmdi"
        http_warn_time = 7
        http_critical_time = 9
        http_expect_body_regex = "identificationInfo>"
    }
    vars.using_http_check["Repository SOLR JSON iso language"] = {
        http_uri = "/repository/xmlui/static/json/iso_langs.json"
        http_warn_time = 3
        http_critical_time = 4
        http_expect_body_regex = "Abkhazian"
        interval = 10m
    }
    vars.using_http_check["Repository SOLR JSON subject"] = {
        http_uri = "/repository/rest/suggestions/subject_ac"
        http_warn_time = 3
        http_critical_time = 4
        http_expect_body_regex = "corpus"
        interval = 10m
    }
    vars.using_http_check["Repository RefBox REST"] = {
        http_uri = "/repository/rest/handle/11858/00-097C-0000-0023-1AAF-3/refbox"
        http_warn_time = 5
        http_critical_time = 10
        http_expect_body_regex = "Dependency"
    }
	vars.using_http_check["CLARIN B shib_test.pl"] = {
		http_uri = "/secure/shib_test.pl"
        http_warn_time = 5
        http_critical_time = 10
        interval = 10m
	}

    /* http in time */
    vars.using_http_check["Repository OAI CMDI http"] = {
        http_uri = "/repository/oai/request?verb=ListRecords&metadataPrefix=cmdi"
        http_warn_time = 4
        http_critical_time = 5
        http_ssl = false
    }

    vars.using_http_check["Repository OAI DC http"] = {
        http_uri = "/repository/oai/request?verb=ListRecords&metadataPrefix=oai_dc"
        http_warn_time = 3
        http_critical_time = 4
        http_ssl = false
    }

    /* group the services under different var, thought technically it still is check_http */
    vars.services["ElixirFM"] = {
        http_uri = "/services/elixirfm/run.php"
        http_ssl = false
    }

    vars.services["FCS bonito"] = {
        http_uri = "/services/fcs-bonito?version=1.2&operation=explain" 
    }

    vars.services["Cesilko"] = {
        http_uri = "/services/cesilko/" 
    }

    vars.services["Cesilko REST"] = {
        http_uri = "/services/rest/cesilko/version" 
        http_string = "version"
    }

    vars.services["PDT-Vallex"] = {
        http_uri = "/services/PDT-Vallex/" 
    }

    vars.services["EngVallex"] = {
        http_uri = "/services/EngVallex/" 
    }

    vars.services["Morph"] = {
        http_uri = "/services/morph/" 
    }

    vars.services["MorphoDiTa"] = {
        http_uri = "/services/morphodita/" 
    }

    vars.services["MorphoDiTa backend"] = {
        http_uri = "/services/morphodita/api/models" 
    }

    vars.services["Dialogy.Org"] = {
        http_uri = "/services/dialogy.org/" 
    }

    vars.services["Korektor"] = {
        http_uri = "/services/korektor/" 
    }

    vars.services["Korektor backend"] = {
        http_uri = "/services/korektor/api/models" 
    }

    vars.services["NameTag"] = {
        http_uri = "/services/nametag/" 
    }

    vars.services["NameTag backend"] = {
        http_uri = "/services/nametag/api/models" 
    }

    vars.services["BIBLIO OAI"] = {
        http_uri = "/biblio/oai?verb=Identify"
        http_ssl = false
    }

    vars.services["Parsito"] = {
        http_uri = "/services/parsito/run.php" 
    }

    vars.important_services["Parsito backend"] = {
        http_uri = "/services/parsito/api/models" 
    }

    vars.services["CzEngVallex"] = {
        http_uri = "/services/CzEngVallex/" 
    }

    vars.services["KER"] = {
        http_uri = "/services/ker/" 
    }

    vars.services["EVALD"] = {
        http_uri = "/services/evald/" 
    }

    vars.services["EVALD Foreign"] = {
        http_uri = "/services/evald-foreign/" 
    }

    vars.using_http_check["Transformer en-cs"] = {
        http_uri = "/services/transformer/api/v1/models/en-cs"
        http_method = "POST"
        http_post = "input_text=This+is+a+test"
        http_expect_body_regex = "Tohle je test."
        http_header = "Accept: */*"
        interval = 1h
        groups += ["Our services"]
    }

    vars.using_http_check["Transformer cs-en"] = {
        http_uri = "/services/transformer/api/v1/models/cs-en"
        http_method = "POST"
        http_post = "input_text=Tohle+je+test"
        http_expect_body_regex = "This is a test"
        http_header = "Accept: */*"
        interval = 1h
        groups += ["Our services"]
    }

    // some services are more important, check more frequently
    vars.important_services["UDPipe"] = {
        http_uri = "/services/udpipe/run.php" 
    }

    vars.important_services["UDPipe backend"] = {
        http_uri = "/services/udpipe/api/models" 
    }

    vars.important_services["KonText old corplist"] = {
        http_uri = "/services/kontext/run.cgi/corplist" 
        http_expect = "HTTP/1.1 302"
    }

    vars.important_services["KonText"] = {
        http_uri = "/services/kontext/corpora/corplist" 
    }

    vars.important_services["FCS kontext"] = {
        http_uri = "/services/fcs-kontext"
    }

    vars.using_http_check["Kontext default corpus"] = {
        http_uri = "/services/kontext/first_form?corpname=vystadial_2013_en_w"
        http_expect_body_regex = "Vystadial 2013 - English - phone calls speech corpus"
        interval = 1h
        groups += ["Our services"]
    }

    vars.important_services["FCS kontext v1"] = {
        http_uri = "/services/kontext/fcs/v1"
    }

    vars.important_services["Treex::Web"] = {
        http_uri = "/services/treex-web/" 
    }

    vars.important_services["Treex::Web backend (scenarios)"] = {
        http_uri = "/services/treex-web/api/v1/scenarios" 
	http_method = "HEAD"
    }

    vars.important_services["PMLTQ"] = {
        http_uri = "/services/pmltq/" 
    }

    vars.important_services["PMLTQ PDT 3.0 Treebank"] = {
	http_uri = "/services/pmltq/#!/treebank/pdt30"
    }

    vars.important_services["Repository REST json"] = {
        http_uri = "/repository/rest/communities" 
        http_header = "Accept: application/json"
    }
}

object Host "handle-server"{
    address = "195.113.20.140"
    display_name = "Handle server"
    check_command = "hostalive"
}

object Host "quest"{
    address = "195.113.20.53"
    vars.http_vhost = "quest.ms.mff.cuni.cz"
    vars.no_ssl = true
    display_name = "quest service cluster"
    check_command = "hostalive"


    vars.services["The Internet Language Reference Book"] = {
	http_vhost = "prirucka.ujc.cas.cz"
        http_uri = "/l/en" 
	http_ssl = true
    }
}
object Host "evald"{
    address = "10.10.51.14"
    vars.http_vhost = "10.10.51.14"
    vars.no_ssl = true
    display_name = "evald"
    check_command = "hostalive"
    vars.services["EVALD backend"] = {
        http_uri = "/api/version" 
        http_string = "version"
	http_ssl = false
    }
}
object Host "lindat.cz"{
    vars.dns_lookup = "lindat.cz"
    check_command = "check_dns"
}

object Host "weblicht" {
    vars.check_address = "weblicht.sfs.uni-tuebingen.de"
    check_command = "hostalive"
}

object Host "piwik" {
    address = "10.10.51.6"
    check_command = "hostalive"
    vars.http_vhost = "10.10.51.6"
    vars.no_ssl = true
    vars.using_http_check["Piwik statistics"] = {
        http_uri = "/piwik/"
        http_warn_time = 3
        http_critical_time = 5
        http_port = "81"
        http_ssl = false
    }
}

object Host "shortref.org"{
    check_command = "check_http"
    vars.http_vhost = "shortref.org"
    vars.http_uri = "/"
    vars.http_expect = "HTTP/1.1 200"
    vars.http_warn_time = 5
    vars.http_critical_time = 10
    vars.no_ssl = true
}

object Host "clarin-aa"{
    address = "195.113.20.181"
    display_name = "clarin-aa"
    check_command = "hostalive"
    vars.http_vhost = "clarin-aa.ms.mff.cuni.cz"
    vars.services["clarin-aa heartbeat"] = {
        http_uri = "/aaggreg/heartbeat/"
    } 
}

object Host "hdl"{
    display_name = "hdl.handle.net"
    vars.dns_lookup = "hdl.handle.net"
    vars.http_vhost = "hdl.handle.net"
    vars.no_ssl = true
    check_command = "check_dns"
    
    vars.using_http_check["Accept: application/x-cmdi+xml /11234/1-2605"] = {
        http_uri = "/11234/1-2605"
        http_ssl = false
        http_onredirect = "follow"
        http_header = "Accept: application/x-cmdi+xml"
        http_string = "<cmd:CMD xmlns:cmd=\"http://www.clarin.eu/cmd/\""
        interval = 15m
    }

    vars.using_http_check["11858/00-097C-0000-0001-B098-5@format=cmdi"] = {
        http_uri = "/11858/00-097C-0000-0001-B098-5@format=cmdi"
        http_ssl = false
        http_onredirect = "follow"
        http_string = "<cmd:CMD xmlns:cmd=\"http://www.clarin.eu/cmd/\""
        interval = 15m
    }

}
